# AUTOGENERATED! DO NOT EDIT! File to edit: ai_vocabulary_web_scraping.ipynb.

# %% auto 0
__all__ = []

# %% ai_vocabulary_web_scraping.ipynb 1
from bs4 import BeautifulSoup
import requests


# %% ai_vocabulary_web_scraping.ipynb 2
base_link = "https://www.cnil.fr/fr/intelligence-artificielle/glossaire-ia?page="
pages = []
for i in range(13):
    pages.append(base_link + str(i))


# %% ai_vocabulary_web_scraping.ipynb 3
alphabet_list = list(map(chr, range(97, 123)))

# %% ai_vocabulary_web_scraping.ipynb 4
alphabet_obj = {}

for char in alphabet_list:
    alphabet_obj[char]= []

# %% ai_vocabulary_web_scraping.ipynb 5
def word_format(word):
    obj = {}
    title = word.find("h3", class_="definition-liste-titre").a.text
    obj["title"] = title
    definition = word.find("div", class_= "definition-liste-body").text.strip()
    obj["definition"] = definition
    obj["entry"] = title[0].lower()
    
    return obj


# %% ai_vocabulary_web_scraping.ipynb 6
for page in pages:
    html_text = requests.get(page).text
    soup = BeautifulSoup(html_text, 'lxml')
    words = soup.find_all("div",class_="list-inner")
    for word in words:
        obj = word_format(word)
        try:
            alphabet_obj[obj["entry"]].append(obj)
        except:
            alphabet_obj[obj["entry"]] = []
            alphabet_obj[obj["entry"]].append(obj)


# %% ai_vocabulary_web_scraping.ipynb 7
import streamlit as st

# %% ai_vocabulary_web_scraping.ipynb 9
entries = alphabet_obj.keys()


# %% ai_vocabulary_web_scraping.ipynb 10
selected_letter = st.selectbox(
    'Which letter',
    entries)

st.write('You selected:', selected_letter)

# %% ai_vocabulary_web_scraping.ipynb 12
selected_entry = st.selectbox(
    'Which word?',
    word_list)

st.write('You selected:', selected_entry)

# %% ai_vocabulary_web_scraping.ipynb 13
def filter_cb(x):
#    print(f"x:{x["title"]} == selected_entry {selected_entry}")
    if x["title"] == selected_entry:
        #print(f"x:{x} == selected_entry {selected_entry}")
        return True
    else: 
        return False
selected_word = list(filter(filter_cb, alphabet_obj[selected_letter]))
print(selected_word
)
st.write(selected_word[0]["definition"])


